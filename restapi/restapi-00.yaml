AWSTemplateFormatVersion: "2010-09-09"
Description: Template for creating serverless API

Parameters:
  S3Bucket:
    Type: String
  S3Key:
    Type: String

Resources:
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Api Gateway Example

  #model of data moving through the API
  UserModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      Name: User
      RestApiId: !Ref RestApi
      Schema:
        "$schema": http://json-schema.org/draft-04/schema#
        title: User
        type: object
        additionalProperties: false
        properties:
          uid:
            type: string
          email:
            type: string
          phone:
            type: string
        required:
          - uid
          - email
          - phone

  #resource, an API endpoint
  UsersResoures:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt [RestApi, RootResourceId]
      PathPart: user

  #method attached to resource/endpoint
  UsersGet:
    Type: AWS::ApiGateway::Method
    Properties:
      Integration:
        #Lambda function-invoking action
        #https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/#type
        Type: AWS
        IntegrationHttpMethod: POST
        #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html#cfn-apigateway-method-integration-type
        Uri: !Join ["", ["arn:aws:apigateway", !Ref "AWS::Region", ":lambda:path/2015/03/31/functions/", !GetAtt [Lambda, Arn], "/invocations"]]
        IntegrationResponses:
          ResponseTemplates:
            "application/json": "$input.json('$.body')"
          ResponseParameters:
            "method.response.header.Link": "integration.response.body.headers.next"
          StatusCode: 200
        PassthroughBehavior: NEVER

  #lambda role to assume during invocation of function
  LambdaRole:
    Type: AWS::IAM:Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: logs
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                Effect: Allow
                Action:
                  logs: *
                Resource: arn:aws:logs:*:*:*

  #lambda function to execute behind API Gateway
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Description: Lambda function to test with API Gateway
      Handler: lambda.handler
      MemorySize: 128
      Role: !GetAtt [LambdaRole, Arn]
      Runtime: nodejs6.10
      Timeout: 3